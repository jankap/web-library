//
// TinyMCE modal
// --------------------------------------------------

.tox.tox.tox { // We need to override the skin styles
	box-sizing: border-box;
	font-size: inherit;
	line-height: inherit;

	.tox-dialog-wrap {
		align-items: center;
		bottom: 0;
		display: flex;
		justify-content: center;
		left: 0;
		position: fixed;
		right: 0;
		top: 0;
		z-index: $z-index-modal;
	}

	.tox-dialog-wrap__backdrop {
		background-color: $modal-backdrop-bg;
		bottom: 0;
		left: 0;
		position: absolute;
		right: 0;
		top: 0;
		z-index: 0;
	}

	.tox-dialog {
		background-color: $modal-content-bg;
		border-color: transparent;
		border-radius: $modal-border-radius;
		border-style: solid;
		border-width: 0;
		box-shadow: none;
		display: flex;
		flex-direction: column;
		max-height: 100%;

		@include bp-up(sm) {
			max-width: $modal-md;
		}

		overflow: hidden;
		position: relative;
		width: 100%;
		z-index: 1;

		@include bp-down(xs) {
			body:not(.tox-force-desktop) & {
				align-self: flex-start;
				margin: 0;
				width: 100%;
			}
		}
	}

	// This is needed for inline dialogs, since they don't use the wrapper/backdrop
	.tox-dialog-inline {
		z-index: $z-index-modal;
	}

	.tox-dialog__header {
		align-items: center;
		border-bottom: 0;
		color: $headings-color;
		display: flex;
		font-size: $font-size-mobile;
		justify-content: space-between;
		position: relative;

		@include touch-or-bp-down(sm) {
			background-color: $modal-form-header-bg;
			height: $modal-header-height + $border-width;
			padding: 0 $modal-inner-padding $border-width;
			@include hairline(bottom, $modal-border-color-touch);

			&::before {
				content: "";
				width: 44px;
				margin-left: -$modal-inner-padding / 2 + 2px; // Even spacing
			}
		}

		@include mouse-and-bp-up(md) {
			background-color: $modal-content-bg;
			border-bottom: $border-width solid $modal-border-color;
			font-size: $modal-title-font-size;
			padding: $modal-inner-padding;
		}
	}

	.tox-dialog__header .tox-button {
		z-index: 1;
	}

	.tox-dialog__title {
		font-family: $headings-font-family;
		font-size: inherit;
		font-style: normal;
		font-weight: $headings-font-weight;
		line-height: $headings-line-height;
		min-width: 0;
		text-align: left;
		text-transform: none;
	}

	.tox-button.tox-button--icon[title="Close"] {
		@include touch-or-bp-down(sm) {
			border: 0;
			padding: 0;
			color: $link-color;
			font-size: inherit;
			font-weight: inherit;

			&::before {
				content: "Close";
			}
		}

		@include mouse-and-bp-up(md) {
			width: 44px;
			height: 44px;
			margin: -$modal-inner-padding / 2;
			margin-right: -$modal-inner-padding / 2 + 2px; // Even spacing
			background: image-url("icons/close.svg") no-repeat center center;
		}

		&:hover:not(:disabled) {
			background-color: transparent;
			border-color: transparent;

			@include mouse-and-bp-up(md) {
				background-image: image-url("icons/close.svg");
			}
		}

		&:focus:not(:disabled) {
			background-color: transparent;
			border-color: transparent;

			@include mouse-and-bp-up(md) {
				background-image: image-url("icons/close.svg");
			}
		}

		&:active:not(:disabled) {
			background-color: transparent;
			border-color: transparent;

			@include mouse-and-bp-up(md) {
				background-image: image-url("icons/close-active.svg");
			}
		}

		.tox-icon {
			display: none;
		}
	}

	.tox-dialog__footer {
		align-items: center;
		display: flex;
		justify-content: space-between;

		@include touch-or-bp-down(sm) {
			background-color: $modal-form-header-bg;
			border-top: 0;
			height: $modal-header-height + $border-width;
			padding: $border-width $modal-inner-padding 0;
			@include hairline(top, $modal-border-color-touch);
		}

		@include mouse-and-bp-up(md) {
			background-color: $modal-content-bg;
			border-top: $border-width solid $modal-border-color;
			padding: $modal-inner-padding;
		}

		.tox-button {
			font-size: inherit;
			line-height: inherit;
			font-weight: inherit;

			@include touch-or-bp-down(sm) {
				display: inline;
				border: 0;
				color: $link-color;
				background-color: transparent;
				padding: 0;

				.icon {
					color: inherit;
				}
			}

			@include touch-keyboard-or-bp-down(sm) {
				&:focus {
					outline: $outline-width solid $focus-color;
					outline-offset: $outline-offset;
					position: relative;
				}
			}

			@include mouse-and-bp-up(md) {
				padding: $input-btn-padding-y $input-btn-padding-x;
				cursor: pointer;
				border: $border-width solid transparent;
				color: $text-color;
				background-color: transparent;
				vertical-align: middle;
				transition:
					color $input-btn-transition,
					background-color $input-btn-transition,
					border-color $input-btn-transition,
					box-shadow $input-btn-transition;
				min-width: 80px;
			}

			&:disabled {
				opacity: 0.5;
				cursor: default !important;
			}

			&:first-child {
				margin-left: 0;
			}

			&:not(:first-child) {
				@include touch-or-bp-down(sm) {
					margin-left: $space-md / 2;
				}

				@include mouse-and-bp-up(md) {
					margin-left: $space-sm / 2;
				}
			}

			&:not(:last-child) {
				@include touch-or-bp-down(sm) {
					margin-right: $space-md / 2;
				}

				@include mouse-and-bp-up(md) {
					margin-right: $space-sm / 2;
				}
			}
		}

		.tox-button.tox-button:not(.tox-button--secondary) {
			@include button-variant($btn-secondary-color); // Mixin does not work with media query

			@include touch-or-bp-down(sm) {
				color: $secondary !important;
				background: none;
				box-shadow: none !important;
				font-weight: 600;
			}
		}

		.tox-button--secondary {
			@include mouse-and-bp-up(md) {
				color: $btn-default-color;
				border-color: $btn-default-border-color;

				&:hover {
					background-color: $btn-default-hover-bg;
					box-shadow: 0 2px 4px  rgba($shade-10, 0.06);
				}

				&:active {
					background-color: darken($shade-1, 4%);
					box-shadow: none;
				}

				&:disabled {
					box-shadow: none;
				}

				@include state("html.keyboard") {
					&:focus {
						border-color: $secondary;
						box-shadow: 0 0 0 $input-btn-focus-width $secondary;

						&:hover {
							border-color: lighten($secondary, 4%);
							box-shadow:
								0 0 0 $input-btn-focus-width lighten($secondary, 4%),
								0 4px 4px $btn-box-shadow-color;
						}

						&:active {
							border-color: darken($secondary, 8%);
							box-shadow: 0 0 0 $input-btn-focus-width darken($secondary, 8%);
						}
					}
				}
			}
		}

		.tox-button--icon {
			html:not(.specifity) & {
				background-repeat: no-repeat;
				background-position: center center;
				min-width: 0;
			}

			@include touch-or-bp-down(sm) {
				width: $space-thumb;
				height: $space-lg;
			}

			@include mouse-and-bp-up(md) {
				width: $space-md + 2 * $space-min + 2 * $input-border-width;
				height: $space-md + 2 * $space-min + 2 * $input-border-width;
			}

			.tox-icon {
				display: none;
			}
		}

		.tox-button--icon[title="Previous"] {
			@include touch-or-bp-down(sm) {
				background-image: image-url("icons/previous-touch.svg");
			}

			@include mouse-and-bp-up(md) {
				background-image: image-url("icons/previous.svg");

				&:active {
					background-image: image-url("icons/previous-active.svg");
				}
			}
		}

		.tox-button--icon[title="Next"] {
			@include touch-or-bp-down(sm) {
				background-image: image-url("icons/next-touch.svg");
			}

			@include mouse-and-bp-up(md) {
				background-image: image-url("icons/next.svg");

				&:active {
					background-image: image-url("icons/next-active.svg");
				}
			}
		}
	}

	.tox-dialog__footer-start {
		&:empty {
			display: none;

			& + .tox-dialog__footer-end {
				flex: 1 1 auto;
				justify-content: space-between;
			}
		}
	}
}
